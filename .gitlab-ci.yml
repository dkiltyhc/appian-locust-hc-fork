image: python:3.7
include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
stages:
  - validate
  - test
  - release

.run_on_merge_and_master: &run_on_merge_and_master
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "master"
      when: always

gemnasium-python-dependency_scanning:
  stage: test
  <<: *run_on_merge_and_master
  variables:
    DS_REMEDIATE: "false"
    DS_DEFAULT_ANALYZERS: "gemnasium-python"
  allow_failure: true
  artifacts:
    public: false
    when: on_failure
    paths:
      - gl-dependency-scanning-report.json
    reports:
      dependency_scanning: gl-dependency-scanning-report.json

#SAST - Static Application Security Testing
bandit-sast:
  stage: test
  <<: *run_on_merge_and_master
  variables:
    SAST_BANDIT_EXCLUDED_PATHS: "*/tests/*"
  allow_failure: true
  artifacts:
    public: false
    when: on_failure
    paths:
      - gl-sast-report.json
    reports:
      sast: gl-sast-report.json

Run Unit Tests:
  stage: validate
  only:
    - merge_requests
    - master
  script:
    - python3 -m pip install -U pipenv
    - pipenv install --dev --ignore-pipfile
    - bin/verify.sh

Build Candidate Docs:
  stage: validate
  only:
    - merge_requests
  artifacts:
    expose_as: 'Candidate Documentation'
    paths:
      - 'appian_locust/docs/build/html/'
    expire_in: 30 days
  script:
    - cd appian_locust/docs
    - python3 -m pip install -r requirements.txt
    - make html

Release appian-locust to Pypi:
  rules:
    - if: '$CI_COMMIT_TAG != null && $CI_PROJECT_NAMESPACE =~ /^appian-oss.*/'
  stage: release
  before_script:
    - bin/writeTagToVersionFile.sh
  script:
    - echo "Publishing appian-locust Python Package to Pypi"
    - bin/releaseLib.sh
